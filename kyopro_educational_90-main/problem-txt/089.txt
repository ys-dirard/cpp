長さ N の正整数列 A = (A[1], A[2], ..., A[N]) が与えられます。
この数列を 1 つ以上の空でない連続した区間に分割する方法は 2^{N-1} 通りありますが、これらのうち次の条件を満たすものの個数を数えてください。

- すべての区間について、その区間内でのバブルソートの交換回数が K 以下である。

なお、答えは非常に大きくなる可能性があるため、10^9+7 で割った余りを出力してください。

《バブルソートの交換回数とは》
「A[i] > A[i+1] であればその 2 数を交換する、という操作を i = 1, 2, ..., N-1 の順に行う」ことを 1 回の走査とします。そこで走査を N-1 回繰り返すことで、数列を昇順にソートできることが知られています。
ここでは、このアルゴリズムを適用した時に整数の交換が行われる回数をバブルソートの交換回数と定義します。
例えば、A = (2, 4, 3, 1) の場合、バブルソートの交換回数は 4 です。


【制約】
・1 ≦ N ≦ 200000
・0 ≦ K ≦ N(N-1)/2
・1 ≦ A[i] ≦ 10^9
・入力はすべて整数


【小課題】
1. (1 点) K = 0
2. (1 点) N ≦ 15
3. (1 点) N ≦ 800
4. (2 点) N ≦ 10000
5. (2 点) 追加の制約はない