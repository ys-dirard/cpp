#include <bits/stdc++.h>
using namespace std;

// 分割数
// 
// n個の互いに区別できない品物を、m個以下に分割する方法の総数を求め、Mで割った余りを答えなさい。
// (m個以下の箱に入れる入れ方の総数)
// 
// 制約：
// 1<=m<=n<=1000
// 2<=M<=10000
// 

// dp[i][j]: jのi分割の総数(i個のものを、j個以下の箱に分割する総数)
// 
// nのm分割 Σ_{1<=i<=m}a_i = n を考える
// 
// 全てのiに対して a_i > 0 であれば、{a_i - 1} は n-m の m 分割となる
// → Σ_{1<=i<=m} (a_i - 1) = n - m なので
// 
// あるiに対して a_i = 0 であれば、{a_i} は n の m-1 分割となる
// → Σ_{1<=i<=m-1} a_i = n なので (0となるa_iは無くても変わらない)
// 
// これを踏まえると、
// dp[i][j] = dp[i][j-i] + dp[i-1][j]
// が遷移となる

int n, m, M;
int dp[1009][1009];

int main(){
    // input
    n = 4;
    m = 3;
    M = 10000;
    // 4 (1+1+2=1+3=2+2=4の4通り)

    dp[0][0] = 1;
    for(int i=1;i<=m;i++){
        for(int j=0;j<=n;j++){
            if(j>=i) dp[i][j] = (dp[i][j-i] + dp[i-1][j]) % M;
            else dp[i][j] = dp[i-1][j];
        }
    }

    cout << dp[m][n] << endl;
    return 0;
}